.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "SSKIT" "1" "2024\-04\-17" "sskit 0.8.3b" "User Manual"
.SH NAME
sskit \- KISS tools for make snapshots in a Btrfs filesystem
.SH SYNOPSYS
\f[B]ssmk\f[R] [\f[I]\-vh\f[R]] \f[I]\-s\f[R] subvolume \f[I]\-p\f[R]
pool \f[I]\-f\f[R] frequency
.PP
\f[B]sscl\f[R] [\f[I]\-vh\f[R]] \f[I]\-p\f[R] pool \f[I]\-q\f[R] quota
.PP
\f[B]sskd\f[R] [\f[I]\-vh\f[R]]
.PP
\f[B]ssct\f[R] [\f[I]\-vh\f[R]] path
.SH DESCRIPTION
SSKit is made up of several small programs that work together,
functioning as one.
.PP
With the \f[CR]ssmk\f[R] and \f[CR]sscl\f[R] tools you can maintain a
pool of snapshots of your subvolumes.
\f[CR]ssmk\f[R] will create a snapshot in the pool directory if the
given frequency is met and \f[CR]sscl\f[R], for its part, will delete
the oldest snapshots that exceed the given quota.
.SS Basic operation
To do this you can use the classic method, which involves using the
standard \f[CR]cron\f[R] program, or the one provided by this kit, which
makes use of the specially dedicated tool \f[CR]sskd\f[R].
.SS /etc/crontab
If you want to use \f[CR]crond\f[R] program, add to
\f[CR]/etc/crontab\f[R] some lines like these:
.IP
.EX
    # Making snapshots:
    \[at]reboot   /usr/sbin/ssmk \-s / \-p /backup/root/boot    \-f 0
    * * * * * /usr/sbin/ssmk \-s / \-p /backup/root/diary   \-f 1d
    * * * * * /usr/sbin/ssmk \-s /home \-p /backup/home/30m \-f 30m
    # Cleaning pools:
    \[at]reboot   /usr/sbin/sscl \-p /backup/root/boot  \-q 30
    * * * * * /usr/sbin/sscl \-p /backup/root/diary \-q 30
    * * * * * /usr/sbin/sscl \-p /backup/home/30m   \-q 20
.EE
.PP
See cron(8) and crontab(5) for details.
.PP
As already said, alternatively to the \f[I]crond method\f[R],
\f[CR]sskit\f[R] provides a simpler tool especially dedicated to this,
\f[CR]sskd\f[R], which makes use of \f[CR]/etc/sstab\f[R].
.SS \f[CR]/etc/sstab\f[R]
\f[CR]sskit\f[R] provides a simple table named \f[CR]/etc/sstab\f[R],
which is used as configuration file when \f[CR]sskd\f[R] runs.
.PP
The configuration file defines all the stuff about what and how the
snapshots of subvolumes are taked.
Read more about it in sstab(5).
.PP
For use \f[CR]sskd\f[R] instead of \f[CR]cron\f[R], edit
\f[CR]/etc/sstab\f[R]:
.IP
.EX
# subvolume    pool               frequency    quota

/              /backup/root/boot  0            30
/              /backup/root/diary 1d           30
/home          /backup/home/30m   30m          20
.EE
.PP
This example is functionally equivalent to the previous \f[CR]cron\f[R]
example.
.PP
In every execution loop, if more time than indicated by the
\f[I]frequency\f[R] has passed, a new snapshot of the
\f[I]subvolume\f[R] will be created inside of its own \f[I]pool\f[R],
until reach the \f[I]quota\f[R], and then, when quota were overpassed,
it will deletes the oldest snapshot until fit to the quota.
.PP
Edit \f[CR]/etc/sstab\f[R] at your preferences and then start and enable
the proper service for your init system.
\f[CR]sskit\f[R] include some services files, for example:
.IP \[bu] 2
System V: \f[CR]/etc/init.d/sskd start\f[R]
.IP \[bu] 2
Systemd: \f[CR]systemctl start sskd\f[R]
.IP \[bu] 2
Dinit: \f[CR]dinitctl start sskd\f[R]
.PP
On startup \f[B]sskd\f[R] will load \f[CR]/etc/sstab\f[R] into memory
and periodically creates or deletes snapshots in the specified
\f[I]pool\f[R] directory.
.SS Currently main tools
.IP \[bu] 2
\f[I]ssmk\f[R]: For making snapshots.
.IP \[bu] 2
\f[I]sscl\f[R]: For cleaning snapshots.
.IP \[bu] 2
\f[I]sskd\f[R]: Snapshot tools daemon.
.SS Additional tools
Additionally, it also integrates the following tools:
.IP \[bu] 2
\f[I]ssct\f[R]: Shows creation and changed time a snapshot.
.SS Not implemented yet tools
.IP \[bu] 2
\f[I]ssst\f[R]: Shows some statics of interest.
.IP \[bu] 2
\f[I]ssgui\f[R]: Graphic user interface.
.SH INCLUDED TOOLS
.SS sskd
Is the daemon.
Loads \f[CR]/etc/sstab\f[R] into memory and starts an infinite loop
where firstly runs \f[CR]ssmk\f[R] and then \f[CR]sscl\f[R] for each
line of such file.
.PP
By default the loop repeats itself every 5 seconds, but it can be
changed setting a \f[I]period\f[R] in command line.
.IP
.EX
Usage:
        sskd [\-h] [\-v] [period]

Options:
        period       Time in seconds for loop repeat. Defaults to 5.

        \-h           Show this help and exit.
        \-v           Show program version and exit.
.EE
.SS ssmk
Takes a source subvolume and creates a snapshot and a destination
directory (called pool), where previous snapshots were stored.
.PP
Checks if the last snapshot in such pool is enough old and if there are
differences with source subvolume, and then takes a new snapshot.
.PP
The snapshot name is automatically set in the \f[CR]date\f[R] format
\f[B]\f[CB]+%Y\-%m\-%d_%H\-%M\-%S\f[B]\f[R].
.IP
.EX
Usage:
        ssmk [\-h] [\-v] \-s subvolume \-p pool \-f freq

Options:
        \-s subvolume Set the source subvolume.
        \-p pool      Set the destination pool.
        \-f freq      Set the frequency.

        \-h           Show this help and exit.
        \-v           Show program version and exit.
.EE
.SS sscl
Takes a pool directory and checks if there are more snapshots than
indicated as maximum by the quota.
If then, deletes the oldest snapshots until the quota is met.
.IP
.EX
Usage:
        sscl [\-h] [\-v] \-p pool \-q quota

Options:
        \-p dir       Set the pool directory.
        \-q quota     Set the quota.

        \-h           Show this help and exit.
        \-v           Show program version and exit.
.EE
.SS ssct
Shows when subvolume was created and when an inode in the subvolume was
last change.
.IP
.EX
Usage:
        ssct [\-h] [\-v] path

Options:
        path         Path to subvolume.

        \-h           Show this help and exit.
        \-v           Show program version and exit.
.EE
.SH NOT YET IMPLEMENTED/INCLUDED TOOLS
.SS ssst
Show snapshot statistics.
.SS ssgui
Graphic user interface.
.PP
   *   *   *   *   *
.SH \f[I]TODO\f[R]
.IP \[bu] 2
Signals handling.
.SH SEE ALSO
sstab(5)
.SH AUTHOR
Manuel Domínguez López
.SH COPYRIGHT
GPLv3
